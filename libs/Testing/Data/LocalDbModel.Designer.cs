//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Testing.Data
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class professor_testingEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект professor_testingEntities, используя строку соединения из раздела "professor_testingEntities" файла конфигурации приложения.
        /// </summary>
        public professor_testingEntities() : base("name=professor_testingEntities", "professor_testingEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта professor_testingEntities.
        /// </summary>
        public professor_testingEntities(string connectionString) : base(connectionString, "professor_testingEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта professor_testingEntities.
        /// </summary>
        public professor_testingEntities(EntityConnection connection) : base(connection, "professor_testingEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Answers> Answers
        {
            get
            {
                if ((_Answers == null))
                {
                    _Answers = base.CreateObjectSet<Answers>("Answers");
                }
                return _Answers;
            }
        }
        private ObjectSet<Answers> _Answers;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Batteries> Batteries
        {
            get
            {
                if ((_Batteries == null))
                {
                    _Batteries = base.CreateObjectSet<Batteries>("Batteries");
                }
                return _Batteries;
            }
        }
        private ObjectSet<Batteries> _Batteries;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<BatteryTests> BatteryTests
        {
            get
            {
                if ((_BatteryTests == null))
                {
                    _BatteryTests = base.CreateObjectSet<BatteryTests>("BatteryTests");
                }
                return _BatteryTests;
            }
        }
        private ObjectSet<BatteryTests> _BatteryTests;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Conseqs> Conseqs
        {
            get
            {
                if ((_Conseqs == null))
                {
                    _Conseqs = base.CreateObjectSet<Conseqs>("Conseqs");
                }
                return _Conseqs;
            }
        }
        private ObjectSet<Conseqs> _Conseqs;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<InterpretRules> InterpretRules
        {
            get
            {
                if ((_InterpretRules == null))
                {
                    _InterpretRules = base.CreateObjectSet<InterpretRules>("InterpretRules");
                }
                return _InterpretRules;
            }
        }
        private ObjectSet<InterpretRules> _InterpretRules;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Interprets> Interprets
        {
            get
            {
                if ((_Interprets == null))
                {
                    _Interprets = base.CreateObjectSet<Interprets>("Interprets");
                }
                return _Interprets;
            }
        }
        private ObjectSet<Interprets> _Interprets;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Questions> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Questions>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Questions> _Questions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<QuestTypes> QuestTypes
        {
            get
            {
                if ((_QuestTypes == null))
                {
                    _QuestTypes = base.CreateObjectSet<QuestTypes>("QuestTypes");
                }
                return _QuestTypes;
            }
        }
        private ObjectSet<QuestTypes> _QuestTypes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Scales> Scales
        {
            get
            {
                if ((_Scales == null))
                {
                    _Scales = base.CreateObjectSet<Scales>("Scales");
                }
                return _Scales;
            }
        }
        private ObjectSet<Scales> _Scales;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ScaleWeights> ScaleWeights
        {
            get
            {
                if ((_ScaleWeights == null))
                {
                    _ScaleWeights = base.CreateObjectSet<ScaleWeights>("ScaleWeights");
                }
                return _ScaleWeights;
            }
        }
        private ObjectSet<ScaleWeights> _ScaleWeights;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Tests> Tests
        {
            get
            {
                if ((_Tests == null))
                {
                    _Tests = base.CreateObjectSet<Tests>("Tests");
                }
                return _Tests;
            }
        }
        private ObjectSet<Tests> _Tests;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Answers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAnswers(Answers answers)
        {
            base.AddObject("Answers", answers);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Batteries. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBatteries(Batteries batteries)
        {
            base.AddObject("Batteries", batteries);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet BatteryTests. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBatteryTests(BatteryTests batteryTests)
        {
            base.AddObject("BatteryTests", batteryTests);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Categories. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Conseqs. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToConseqs(Conseqs conseqs)
        {
            base.AddObject("Conseqs", conseqs);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet InterpretRules. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToInterpretRules(InterpretRules interpretRules)
        {
            base.AddObject("InterpretRules", interpretRules);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Interprets. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToInterprets(Interprets interprets)
        {
            base.AddObject("Interprets", interprets);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Questions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToQuestions(Questions questions)
        {
            base.AddObject("Questions", questions);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet QuestTypes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToQuestTypes(QuestTypes questTypes)
        {
            base.AddObject("QuestTypes", questTypes);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Scales. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToScales(Scales scales)
        {
            base.AddObject("Scales", scales);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ScaleWeights. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToScaleWeights(ScaleWeights scaleWeights)
        {
            base.AddObject("ScaleWeights", scaleWeights);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Tests. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTests(Tests tests)
        {
            base.AddObject("Tests", tests);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Answers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Answers : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Answers.
        /// </summary>
        /// <param name="ansID">Исходное значение свойства AnsID.</param>
        /// <param name="questID">Исходное значение свойства QuestID.</param>
        /// <param name="ansText">Исходное значение свойства AnsText.</param>
        public static Answers CreateAnswers(global::System.Int32 ansID, global::System.Int32 questID, global::System.String ansText)
        {
            Answers answers = new Answers();
            answers.AnsID = ansID;
            answers.QuestID = questID;
            answers.AnsText = ansText;
            return answers;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnsID
        {
            get
            {
                return _AnsID;
            }
            set
            {
                if (_AnsID != value)
                {
                    OnAnsIDChanging(value);
                    ReportPropertyChanging("AnsID");
                    _AnsID = StructuralObject.SetValidValue(value, "AnsID");
                    ReportPropertyChanged("AnsID");
                    OnAnsIDChanged();
                }
            }
        }
        private global::System.Int32 _AnsID;
        partial void OnAnsIDChanging(global::System.Int32 value);
        partial void OnAnsIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestID
        {
            get
            {
                return _QuestID;
            }
            set
            {
                OnQuestIDChanging(value);
                ReportPropertyChanging("QuestID");
                _QuestID = StructuralObject.SetValidValue(value, "QuestID");
                ReportPropertyChanged("QuestID");
                OnQuestIDChanged();
            }
        }
        private global::System.Int32 _QuestID;
        partial void OnQuestIDChanging(global::System.Int32 value);
        partial void OnQuestIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnsNum
        {
            get
            {
                return _AnsNum;
            }
            set
            {
                OnAnsNumChanging(value);
                ReportPropertyChanging("AnsNum");
                _AnsNum = StructuralObject.SetValidValue(value, "AnsNum");
                ReportPropertyChanged("AnsNum");
                OnAnsNumChanged();
            }
        }
        private Nullable<global::System.Int32> _AnsNum;
        partial void OnAnsNumChanging(Nullable<global::System.Int32> value);
        partial void OnAnsNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnsText
        {
            get
            {
                return _AnsText;
            }
            set
            {
                OnAnsTextChanging(value);
                ReportPropertyChanging("AnsText");
                _AnsText = StructuralObject.SetValidValue(value, false, "AnsText");
                ReportPropertyChanged("AnsText");
                OnAnsTextChanged();
            }
        }
        private global::System.String _AnsText;
        partial void OnAnsTextChanging(global::System.String value);
        partial void OnAnsTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NextQuestNum
        {
            get
            {
                return _NextQuestNum;
            }
            set
            {
                OnNextQuestNumChanging(value);
                ReportPropertyChanging("NextQuestNum");
                _NextQuestNum = StructuralObject.SetValidValue(value, "NextQuestNum");
                ReportPropertyChanged("NextQuestNum");
                OnNextQuestNumChanged();
            }
        }
        private Nullable<global::System.Int32> _NextQuestNum;
        partial void OnNextQuestNumChanging(Nullable<global::System.Int32> value);
        partial void OnNextQuestNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Batteries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Batteries : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Batteries.
        /// </summary>
        /// <param name="batteryID">Исходное значение свойства BatteryID.</param>
        public static Batteries CreateBatteries(global::System.Int32 batteryID)
        {
            Batteries batteries = new Batteries();
            batteries.BatteryID = batteryID;
            return batteries;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatteryID
        {
            get
            {
                return _BatteryID;
            }
            set
            {
                if (_BatteryID != value)
                {
                    OnBatteryIDChanging(value);
                    ReportPropertyChanging("BatteryID");
                    _BatteryID = StructuralObject.SetValidValue(value, "BatteryID");
                    ReportPropertyChanged("BatteryID");
                    OnBatteryIDChanged();
                }
            }
        }
        private global::System.Int32 _BatteryID;
        partial void OnBatteryIDChanging(global::System.Int32 value);
        partial void OnBatteryIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BatteryName
        {
            get
            {
                return _BatteryName;
            }
            set
            {
                OnBatteryNameChanging(value);
                ReportPropertyChanging("BatteryName");
                _BatteryName = StructuralObject.SetValidValue(value, true, "BatteryName");
                ReportPropertyChanged("BatteryName");
                OnBatteryNameChanged();
            }
        }
        private global::System.String _BatteryName;
        partial void OnBatteryNameChanging(global::System.String value);
        partial void OnBatteryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="BatteryTests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BatteryTests : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта BatteryTests.
        /// </summary>
        /// <param name="batteryTestID">Исходное значение свойства BatteryTestID.</param>
        /// <param name="batteryID">Исходное значение свойства BatteryID.</param>
        /// <param name="testID">Исходное значение свойства TestID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        public static BatteryTests CreateBatteryTests(global::System.Int32 batteryTestID, global::System.Int32 batteryID, global::System.Int32 testID, global::System.Int32 number)
        {
            BatteryTests batteryTests = new BatteryTests();
            batteryTests.BatteryTestID = batteryTestID;
            batteryTests.BatteryID = batteryID;
            batteryTests.TestID = testID;
            batteryTests.Number = number;
            return batteryTests;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatteryTestID
        {
            get
            {
                return _BatteryTestID;
            }
            set
            {
                if (_BatteryTestID != value)
                {
                    OnBatteryTestIDChanging(value);
                    ReportPropertyChanging("BatteryTestID");
                    _BatteryTestID = StructuralObject.SetValidValue(value, "BatteryTestID");
                    ReportPropertyChanged("BatteryTestID");
                    OnBatteryTestIDChanged();
                }
            }
        }
        private global::System.Int32 _BatteryTestID;
        partial void OnBatteryTestIDChanging(global::System.Int32 value);
        partial void OnBatteryTestIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatteryID
        {
            get
            {
                return _BatteryID;
            }
            set
            {
                OnBatteryIDChanging(value);
                ReportPropertyChanging("BatteryID");
                _BatteryID = StructuralObject.SetValidValue(value, "BatteryID");
                ReportPropertyChanged("BatteryID");
                OnBatteryIDChanged();
            }
        }
        private global::System.Int32 _BatteryID;
        partial void OnBatteryIDChanging(global::System.Int32 value);
        partial void OnBatteryIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                OnTestIDChanging(value);
                ReportPropertyChanging("TestID");
                _TestID = StructuralObject.SetValidValue(value, "TestID");
                ReportPropertyChanged("TestID");
                OnTestIDChanged();
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Categories.
        /// </summary>
        /// <param name="categoryID">Исходное значение свойства CategoryID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Categories CreateCategories(global::System.Int32 categoryID, global::System.String name)
        {
            Categories categories = new Categories();
            categories.CategoryID = categoryID;
            categories.Name = name;
            return categories;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Conseqs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conseqs : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Conseqs.
        /// </summary>
        /// <param name="conseqID">Исходное значение свойства ConseqID.</param>
        /// <param name="ruleID">Исходное значение свойства RuleID.</param>
        public static Conseqs CreateConseqs(global::System.Int32 conseqID, global::System.Int32 ruleID)
        {
            Conseqs conseqs = new Conseqs();
            conseqs.ConseqID = conseqID;
            conseqs.RuleID = ruleID;
            return conseqs;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConseqID
        {
            get
            {
                return _ConseqID;
            }
            set
            {
                if (_ConseqID != value)
                {
                    OnConseqIDChanging(value);
                    ReportPropertyChanging("ConseqID");
                    _ConseqID = StructuralObject.SetValidValue(value, "ConseqID");
                    ReportPropertyChanged("ConseqID");
                    OnConseqIDChanged();
                }
            }
        }
        private global::System.Int32 _ConseqID;
        partial void OnConseqIDChanging(global::System.Int32 value);
        partial void OnConseqIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                OnRuleIDChanging(value);
                ReportPropertyChanging("RuleID");
                _RuleID = StructuralObject.SetValidValue(value, "RuleID");
                ReportPropertyChanged("RuleID");
                OnRuleIDChanged();
            }
        }
        private global::System.Int32 _RuleID;
        partial void OnRuleIDChanging(global::System.Int32 value);
        partial void OnRuleIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConseqText
        {
            get
            {
                return _ConseqText;
            }
            set
            {
                OnConseqTextChanging(value);
                ReportPropertyChanging("ConseqText");
                _ConseqText = StructuralObject.SetValidValue(value, true, "ConseqText");
                ReportPropertyChanged("ConseqText");
                OnConseqTextChanged();
            }
        }
        private global::System.String _ConseqText;
        partial void OnConseqTextChanging(global::System.String value);
        partial void OnConseqTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TXT_TXT_N
        {
            get
            {
                return _TXT_TXT_N;
            }
            set
            {
                OnTXT_TXT_NChanging(value);
                ReportPropertyChanging("TXT_TXT_N");
                _TXT_TXT_N = StructuralObject.SetValidValue(value, "TXT_TXT_N");
                ReportPropertyChanged("TXT_TXT_N");
                OnTXT_TXT_NChanged();
            }
        }
        private Nullable<global::System.Int32> _TXT_TXT_N;
        partial void OnTXT_TXT_NChanging(Nullable<global::System.Int32> value);
        partial void OnTXT_TXT_NChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="InterpretRules")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InterpretRules : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта InterpretRules.
        /// </summary>
        /// <param name="ruleID">Исходное значение свойства RuleID.</param>
        /// <param name="interpretID">Исходное значение свойства InterpretID.</param>
        public static InterpretRules CreateInterpretRules(global::System.Int32 ruleID, global::System.Int32 interpretID)
        {
            InterpretRules interpretRules = new InterpretRules();
            interpretRules.RuleID = ruleID;
            interpretRules.InterpretID = interpretID;
            return interpretRules;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                if (_RuleID != value)
                {
                    OnRuleIDChanging(value);
                    ReportPropertyChanging("RuleID");
                    _RuleID = StructuralObject.SetValidValue(value, "RuleID");
                    ReportPropertyChanged("RuleID");
                    OnRuleIDChanged();
                }
            }
        }
        private global::System.Int32 _RuleID;
        partial void OnRuleIDChanging(global::System.Int32 value);
        partial void OnRuleIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InterpretID
        {
            get
            {
                return _InterpretID;
            }
            set
            {
                OnInterpretIDChanging(value);
                ReportPropertyChanging("InterpretID");
                _InterpretID = StructuralObject.SetValidValue(value, "InterpretID");
                ReportPropertyChanged("InterpretID");
                OnInterpretIDChanged();
            }
        }
        private global::System.Int32 _InterpretID;
        partial void OnInterpretIDChanging(global::System.Int32 value);
        partial void OnInterpretIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuleText
        {
            get
            {
                return _RuleText;
            }
            set
            {
                OnRuleTextChanging(value);
                ReportPropertyChanging("RuleText");
                _RuleText = StructuralObject.SetValidValue(value, true, "RuleText");
                ReportPropertyChanged("RuleText");
                OnRuleTextChanged();
            }
        }
        private global::System.String _RuleText;
        partial void OnRuleTextChanging(global::System.String value);
        partial void OnRuleTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CON_TXT_N
        {
            get
            {
                return _CON_TXT_N;
            }
            set
            {
                OnCON_TXT_NChanging(value);
                ReportPropertyChanging("CON_TXT_N");
                _CON_TXT_N = StructuralObject.SetValidValue(value, "CON_TXT_N");
                ReportPropertyChanged("CON_TXT_N");
                OnCON_TXT_NChanged();
            }
        }
        private Nullable<global::System.Int32> _CON_TXT_N;
        partial void OnCON_TXT_NChanging(Nullable<global::System.Int32> value);
        partial void OnCON_TXT_NChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Interprets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Interprets : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Interprets.
        /// </summary>
        /// <param name="interpretID">Исходное значение свойства InterpretID.</param>
        /// <param name="interpretName">Исходное значение свойства InterpretName.</param>
        /// <param name="interpretShortName">Исходное значение свойства InterpretShortName.</param>
        public static Interprets CreateInterprets(global::System.Int32 interpretID, global::System.String interpretName, global::System.String interpretShortName)
        {
            Interprets interprets = new Interprets();
            interprets.InterpretID = interpretID;
            interprets.InterpretName = interpretName;
            interprets.InterpretShortName = interpretShortName;
            return interprets;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InterpretID
        {
            get
            {
                return _InterpretID;
            }
            set
            {
                if (_InterpretID != value)
                {
                    OnInterpretIDChanging(value);
                    ReportPropertyChanging("InterpretID");
                    _InterpretID = StructuralObject.SetValidValue(value, "InterpretID");
                    ReportPropertyChanged("InterpretID");
                    OnInterpretIDChanged();
                }
            }
        }
        private global::System.Int32 _InterpretID;
        partial void OnInterpretIDChanging(global::System.Int32 value);
        partial void OnInterpretIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InterpretName
        {
            get
            {
                return _InterpretName;
            }
            set
            {
                OnInterpretNameChanging(value);
                ReportPropertyChanging("InterpretName");
                _InterpretName = StructuralObject.SetValidValue(value, false, "InterpretName");
                ReportPropertyChanged("InterpretName");
                OnInterpretNameChanged();
            }
        }
        private global::System.String _InterpretName;
        partial void OnInterpretNameChanging(global::System.String value);
        partial void OnInterpretNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InterpretShortName
        {
            get
            {
                return _InterpretShortName;
            }
            set
            {
                OnInterpretShortNameChanging(value);
                ReportPropertyChanging("InterpretShortName");
                _InterpretShortName = StructuralObject.SetValidValue(value, false, "InterpretShortName");
                ReportPropertyChanged("InterpretShortName");
                OnInterpretShortNameChanged();
            }
        }
        private global::System.String _InterpretShortName;
        partial void OnInterpretShortNameChanging(global::System.String value);
        partial void OnInterpretShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Questions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Questions : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Questions.
        /// </summary>
        /// <param name="questID">Исходное значение свойства QuestID.</param>
        /// <param name="testID">Исходное значение свойства TestID.</param>
        /// <param name="questText">Исходное значение свойства QuestText.</param>
        /// <param name="questType">Исходное значение свойства QuestType.</param>
        public static Questions CreateQuestions(global::System.Int32 questID, global::System.Int32 testID, global::System.String questText, global::System.Int32 questType)
        {
            Questions questions = new Questions();
            questions.QuestID = questID;
            questions.TestID = testID;
            questions.QuestText = questText;
            questions.QuestType = questType;
            return questions;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestID
        {
            get
            {
                return _QuestID;
            }
            set
            {
                if (_QuestID != value)
                {
                    OnQuestIDChanging(value);
                    ReportPropertyChanging("QuestID");
                    _QuestID = StructuralObject.SetValidValue(value, "QuestID");
                    ReportPropertyChanged("QuestID");
                    OnQuestIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestID;
        partial void OnQuestIDChanging(global::System.Int32 value);
        partial void OnQuestIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                OnTestIDChanging(value);
                ReportPropertyChanging("TestID");
                _TestID = StructuralObject.SetValidValue(value, "TestID");
                ReportPropertyChanged("TestID");
                OnTestIDChanged();
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuestText
        {
            get
            {
                return _QuestText;
            }
            set
            {
                OnQuestTextChanging(value);
                ReportPropertyChanging("QuestText");
                _QuestText = StructuralObject.SetValidValue(value, false, "QuestText");
                ReportPropertyChanged("QuestText");
                OnQuestTextChanged();
            }
        }
        private global::System.String _QuestText;
        partial void OnQuestTextChanging(global::System.String value);
        partial void OnQuestTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestType
        {
            get
            {
                return _QuestType;
            }
            set
            {
                OnQuestTypeChanging(value);
                ReportPropertyChanging("QuestType");
                _QuestType = StructuralObject.SetValidValue(value, "QuestType");
                ReportPropertyChanged("QuestType");
                OnQuestTypeChanged();
            }
        }
        private global::System.Int32 _QuestType;
        partial void OnQuestTypeChanging(global::System.Int32 value);
        partial void OnQuestTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QuestNum
        {
            get
            {
                return _QuestNum;
            }
            set
            {
                OnQuestNumChanging(value);
                ReportPropertyChanging("QuestNum");
                _QuestNum = StructuralObject.SetValidValue(value, "QuestNum");
                ReportPropertyChanged("QuestNum");
                OnQuestNumChanged();
            }
        }
        private Nullable<global::System.Int32> _QuestNum;
        partial void OnQuestNumChanging(Nullable<global::System.Int32> value);
        partial void OnQuestNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] QuestImg
        {
            get
            {
                return StructuralObject.GetValidValue(_QuestImg);
            }
            set
            {
                OnQuestImgChanging(value);
                ReportPropertyChanging("QuestImg");
                _QuestImg = StructuralObject.SetValidValue(value, true, "QuestImg");
                ReportPropertyChanged("QuestImg");
                OnQuestImgChanged();
            }
        }
        private global::System.Byte[] _QuestImg;
        partial void OnQuestImgChanging(global::System.Byte[] value);
        partial void OnQuestImgChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="QuestTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestTypes : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта QuestTypes.
        /// </summary>
        /// <param name="questTypeID">Исходное значение свойства QuestTypeID.</param>
        /// <param name="typeName">Исходное значение свойства TypeName.</param>
        public static QuestTypes CreateQuestTypes(global::System.Int32 questTypeID, global::System.String typeName)
        {
            QuestTypes questTypes = new QuestTypes();
            questTypes.QuestTypeID = questTypeID;
            questTypes.TypeName = typeName;
            return questTypes;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestTypeID
        {
            get
            {
                return _QuestTypeID;
            }
            set
            {
                if (_QuestTypeID != value)
                {
                    OnQuestTypeIDChanging(value);
                    ReportPropertyChanging("QuestTypeID");
                    _QuestTypeID = StructuralObject.SetValidValue(value, "QuestTypeID");
                    ReportPropertyChanged("QuestTypeID");
                    OnQuestTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestTypeID;
        partial void OnQuestTypeIDChanging(global::System.Int32 value);
        partial void OnQuestTypeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false, "TypeName");
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Scales")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scales : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Scales.
        /// </summary>
        /// <param name="scaleID">Исходное значение свойства ScaleID.</param>
        /// <param name="testID">Исходное значение свойства TestID.</param>
        public static Scales CreateScales(global::System.Int32 scaleID, global::System.Int32 testID)
        {
            Scales scales = new Scales();
            scales.ScaleID = scaleID;
            scales.TestID = testID;
            return scales;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScaleID
        {
            get
            {
                return _ScaleID;
            }
            set
            {
                if (_ScaleID != value)
                {
                    OnScaleIDChanging(value);
                    ReportPropertyChanging("ScaleID");
                    _ScaleID = StructuralObject.SetValidValue(value, "ScaleID");
                    ReportPropertyChanged("ScaleID");
                    OnScaleIDChanged();
                }
            }
        }
        private global::System.Int32 _ScaleID;
        partial void OnScaleIDChanging(global::System.Int32 value);
        partial void OnScaleIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScaleName
        {
            get
            {
                return _ScaleName;
            }
            set
            {
                OnScaleNameChanging(value);
                ReportPropertyChanging("ScaleName");
                _ScaleName = StructuralObject.SetValidValue(value, true, "ScaleName");
                ReportPropertyChanged("ScaleName");
                OnScaleNameChanged();
            }
        }
        private global::System.String _ScaleName;
        partial void OnScaleNameChanging(global::System.String value);
        partial void OnScaleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScaleShortName
        {
            get
            {
                return _ScaleShortName;
            }
            set
            {
                OnScaleShortNameChanging(value);
                ReportPropertyChanging("ScaleShortName");
                _ScaleShortName = StructuralObject.SetValidValue(value, true, "ScaleShortName");
                ReportPropertyChanged("ScaleShortName");
                OnScaleShortNameChanged();
            }
        }
        private global::System.String _ScaleShortName;
        partial void OnScaleShortNameChanging(global::System.String value);
        partial void OnScaleShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                OnTestIDChanging(value);
                ReportPropertyChanging("TestID");
                _TestID = StructuralObject.SetValidValue(value, "TestID");
                ReportPropertyChanged("TestID");
                OnTestIDChanged();
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BallAVR
        {
            get
            {
                return _BallAVR;
            }
            set
            {
                OnBallAVRChanging(value);
                ReportPropertyChanging("BallAVR");
                _BallAVR = StructuralObject.SetValidValue(value, "BallAVR");
                ReportPropertyChanged("BallAVR");
                OnBallAVRChanged();
            }
        }
        private Nullable<global::System.Double> _BallAVR;
        partial void OnBallAVRChanging(Nullable<global::System.Double> value);
        partial void OnBallAVRChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BallMin
        {
            get
            {
                return _BallMin;
            }
            set
            {
                OnBallMinChanging(value);
                ReportPropertyChanging("BallMin");
                _BallMin = StructuralObject.SetValidValue(value, "BallMin");
                ReportPropertyChanged("BallMin");
                OnBallMinChanged();
            }
        }
        private Nullable<global::System.Double> _BallMin;
        partial void OnBallMinChanging(Nullable<global::System.Double> value);
        partial void OnBallMinChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BallMax
        {
            get
            {
                return _BallMax;
            }
            set
            {
                OnBallMaxChanging(value);
                ReportPropertyChanging("BallMax");
                _BallMax = StructuralObject.SetValidValue(value, "BallMax");
                ReportPropertyChanged("BallMax");
                OnBallMaxChanged();
            }
        }
        private Nullable<global::System.Double> _BallMax;
        partial void OnBallMaxChanging(Nullable<global::System.Double> value);
        partial void OnBallMaxChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BallSTD
        {
            get
            {
                return _BallSTD;
            }
            set
            {
                OnBallSTDChanging(value);
                ReportPropertyChanging("BallSTD");
                _BallSTD = StructuralObject.SetValidValue(value, "BallSTD");
                ReportPropertyChanged("BallSTD");
                OnBallSTDChanged();
            }
        }
        private Nullable<global::System.Double> _BallSTD;
        partial void OnBallSTDChanging(Nullable<global::System.Double> value);
        partial void OnBallSTDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Point0
        {
            get
            {
                return _Point0;
            }
            set
            {
                OnPoint0Changing(value);
                ReportPropertyChanging("Point0");
                _Point0 = StructuralObject.SetValidValue(value, "Point0");
                ReportPropertyChanged("Point0");
                OnPoint0Changed();
            }
        }
        private Nullable<global::System.Double> _Point0;
        partial void OnPoint0Changing(Nullable<global::System.Double> value);
        partial void OnPoint0Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Point1
        {
            get
            {
                return _Point1;
            }
            set
            {
                OnPoint1Changing(value);
                ReportPropertyChanging("Point1");
                _Point1 = StructuralObject.SetValidValue(value, "Point1");
                ReportPropertyChanged("Point1");
                OnPoint1Changed();
            }
        }
        private Nullable<global::System.Double> _Point1;
        partial void OnPoint1Changing(Nullable<global::System.Double> value);
        partial void OnPoint1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Point2
        {
            get
            {
                return _Point2;
            }
            set
            {
                OnPoint2Changing(value);
                ReportPropertyChanging("Point2");
                _Point2 = StructuralObject.SetValidValue(value, "Point2");
                ReportPropertyChanged("Point2");
                OnPoint2Changed();
            }
        }
        private Nullable<global::System.Double> _Point2;
        partial void OnPoint2Changing(Nullable<global::System.Double> value);
        partial void OnPoint2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Point3
        {
            get
            {
                return _Point3;
            }
            set
            {
                OnPoint3Changing(value);
                ReportPropertyChanging("Point3");
                _Point3 = StructuralObject.SetValidValue(value, "Point3");
                ReportPropertyChanged("Point3");
                OnPoint3Changed();
            }
        }
        private Nullable<global::System.Double> _Point3;
        partial void OnPoint3Changing(Nullable<global::System.Double> value);
        partial void OnPoint3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Point4
        {
            get
            {
                return _Point4;
            }
            set
            {
                OnPoint4Changing(value);
                ReportPropertyChanging("Point4");
                _Point4 = StructuralObject.SetValidValue(value, "Point4");
                ReportPropertyChanged("Point4");
                OnPoint4Changed();
            }
        }
        private Nullable<global::System.Double> _Point4;
        partial void OnPoint4Changing(Nullable<global::System.Double> value);
        partial void OnPoint4Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="ScaleWeights")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScaleWeights : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ScaleWeights.
        /// </summary>
        /// <param name="scaleWeightID">Исходное значение свойства ScaleWeightID.</param>
        public static ScaleWeights CreateScaleWeights(global::System.Int32 scaleWeightID)
        {
            ScaleWeights scaleWeights = new ScaleWeights();
            scaleWeights.ScaleWeightID = scaleWeightID;
            return scaleWeights;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScaleWeightID
        {
            get
            {
                return _ScaleWeightID;
            }
            set
            {
                if (_ScaleWeightID != value)
                {
                    OnScaleWeightIDChanging(value);
                    ReportPropertyChanging("ScaleWeightID");
                    _ScaleWeightID = StructuralObject.SetValidValue(value, "ScaleWeightID");
                    ReportPropertyChanged("ScaleWeightID");
                    OnScaleWeightIDChanged();
                }
            }
        }
        private global::System.Int32 _ScaleWeightID;
        partial void OnScaleWeightIDChanging(global::System.Int32 value);
        partial void OnScaleWeightIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnsID
        {
            get
            {
                return _AnsID;
            }
            set
            {
                OnAnsIDChanging(value);
                ReportPropertyChanging("AnsID");
                _AnsID = StructuralObject.SetValidValue(value, "AnsID");
                ReportPropertyChanged("AnsID");
                OnAnsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AnsID;
        partial void OnAnsIDChanging(Nullable<global::System.Int32> value);
        partial void OnAnsIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScaleID
        {
            get
            {
                return _ScaleID;
            }
            set
            {
                OnScaleIDChanging(value);
                ReportPropertyChanging("ScaleID");
                _ScaleID = StructuralObject.SetValidValue(value, "ScaleID");
                ReportPropertyChanged("ScaleID");
                OnScaleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ScaleID;
        partial void OnScaleIDChanging(Nullable<global::System.Int32> value);
        partial void OnScaleIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value, "Weight");
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Double> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Double> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Tests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tests : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Tests.
        /// </summary>
        /// <param name="testID">Исходное значение свойства TestID.</param>
        /// <param name="shortName">Исходное значение свойства ShortName.</param>
        /// <param name="fullName">Исходное значение свойства FullName.</param>
        /// <param name="categoryID">Исходное значение свойства CategoryID.</param>
        /// <param name="testingCount">Исходное значение свойства TestingCount.</param>
        /// <param name="horisontalAnswers">Исходное значение свойства HorisontalAnswers.</param>
        public static Tests CreateTests(global::System.Int32 testID, global::System.String shortName, global::System.String fullName, global::System.Int32 categoryID, global::System.Int32 testingCount, global::System.Boolean horisontalAnswers)
        {
            Tests tests = new Tests();
            tests.TestID = testID;
            tests.ShortName = shortName;
            tests.FullName = fullName;
            tests.CategoryID = categoryID;
            tests.TestingCount = testingCount;
            tests.HorisontalAnswers = horisontalAnswers;
            return tests;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                if (_TestID != value)
                {
                    OnTestIDChanging(value);
                    ReportPropertyChanging("TestID");
                    _TestID = StructuralObject.SetValidValue(value, "TestID");
                    ReportPropertyChanged("TestID");
                    OnTestIDChanged();
                }
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false, "ShortName");
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true, "Author");
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestingCount
        {
            get
            {
                return _TestingCount;
            }
            set
            {
                OnTestingCountChanging(value);
                ReportPropertyChanging("TestingCount");
                _TestingCount = StructuralObject.SetValidValue(value, "TestingCount");
                ReportPropertyChanged("TestingCount");
                OnTestingCountChanged();
            }
        }
        private global::System.Int32 _TestingCount;
        partial void OnTestingCountChanging(global::System.Int32 value);
        partial void OnTestingCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Preamble
        {
            get
            {
                return _Preamble;
            }
            set
            {
                OnPreambleChanging(value);
                ReportPropertyChanging("Preamble");
                _Preamble = StructuralObject.SetValidValue(value, true, "Preamble");
                ReportPropertyChanged("Preamble");
                OnPreambleChanged();
            }
        }
        private global::System.String _Preamble;
        partial void OnPreambleChanging(global::System.String value);
        partial void OnPreambleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HorisontalAnswers
        {
            get
            {
                return _HorisontalAnswers;
            }
            set
            {
                OnHorisontalAnswersChanging(value);
                ReportPropertyChanging("HorisontalAnswers");
                _HorisontalAnswers = StructuralObject.SetValidValue(value, "HorisontalAnswers");
                ReportPropertyChanged("HorisontalAnswers");
                OnHorisontalAnswersChanged();
            }
        }
        private global::System.Boolean _HorisontalAnswers;
        partial void OnHorisontalAnswersChanging(global::System.Boolean value);
        partial void OnHorisontalAnswersChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="professor_testingModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="priv">Исходное значение свойства Priv.</param>
        /// <param name="ban">Исходное значение свойства Ban.</param>
        /// <param name="active">Исходное значение свойства Active.</param>
        /// <param name="aID">Исходное значение свойства AID.</param>
        /// <param name="lastIdExaminee">Исходное значение свойства LastIdExaminee.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.Int32 priv, global::System.Byte ban, global::System.Byte active, global::System.String aID, global::System.Int32 lastIdExaminee)
        {
            Users users = new Users();
            users.ID = id;
            users.Priv = priv;
            users.Ban = ban;
            users.Active = active;
            users.AID = aID;
            users.LastIdExaminee = lastIdExaminee;
            return users;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priv
        {
            get
            {
                return _Priv;
            }
            set
            {
                OnPrivChanging(value);
                ReportPropertyChanging("Priv");
                _Priv = StructuralObject.SetValidValue(value, "Priv");
                ReportPropertyChanged("Priv");
                OnPrivChanged();
            }
        }
        private global::System.Int32 _Priv;
        partial void OnPrivChanging(global::System.Int32 value);
        partial void OnPrivChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nName
        {
            get
            {
                return _nName;
            }
            set
            {
                OnnNameChanging(value);
                ReportPropertyChanging("nName");
                _nName = StructuralObject.SetValidValue(value, true, "nName");
                ReportPropertyChanged("nName");
                OnnNameChanged();
            }
        }
        private global::System.String _nName;
        partial void OnnNameChanging(global::System.String value);
        partial void OnnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Ban
        {
            get
            {
                return _Ban;
            }
            set
            {
                OnBanChanging(value);
                ReportPropertyChanging("Ban");
                _Ban = StructuralObject.SetValidValue(value, "Ban");
                ReportPropertyChanged("Ban");
                OnBanChanged();
            }
        }
        private global::System.Byte _Ban;
        partial void OnBanChanging(global::System.Byte value);
        partial void OnBanChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Byte _Active;
        partial void OnActiveChanging(global::System.Byte value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AID
        {
            get
            {
                return _AID;
            }
            set
            {
                OnAIDChanging(value);
                ReportPropertyChanging("AID");
                _AID = StructuralObject.SetValidValue(value, false, "AID");
                ReportPropertyChanged("AID");
                OnAIDChanged();
            }
        }
        private global::System.String _AID;
        partial void OnAIDChanging(global::System.String value);
        partial void OnAIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Expiration
        {
            get
            {
                return _Expiration;
            }
            set
            {
                OnExpirationChanging(value);
                ReportPropertyChanging("Expiration");
                _Expiration = StructuralObject.SetValidValue(value, "Expiration");
                ReportPropertyChanged("Expiration");
                OnExpirationChanged();
            }
        }
        private Nullable<global::System.Int32> _Expiration;
        partial void OnExpirationChanging(Nullable<global::System.Int32> value);
        partial void OnExpirationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastArchive
        {
            get
            {
                return _LastArchive;
            }
            set
            {
                OnLastArchiveChanging(value);
                ReportPropertyChanging("LastArchive");
                _LastArchive = StructuralObject.SetValidValue(value, true, "LastArchive");
                ReportPropertyChanged("LastArchive");
                OnLastArchiveChanged();
            }
        }
        private global::System.String _LastArchive;
        partial void OnLastArchiveChanging(global::System.String value);
        partial void OnLastArchiveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastIdExaminee
        {
            get
            {
                return _LastIdExaminee;
            }
            set
            {
                OnLastIdExamineeChanging(value);
                ReportPropertyChanging("LastIdExaminee");
                _LastIdExaminee = StructuralObject.SetValidValue(value, "LastIdExaminee");
                ReportPropertyChanged("LastIdExaminee");
                OnLastIdExamineeChanged();
            }
        }
        private global::System.Int32 _LastIdExaminee;
        partial void OnLastIdExamineeChanging(global::System.Int32 value);
        partial void OnLastIdExamineeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysChangeTxBsn
        {
            get
            {
                return _C__sysChangeTxBsn;
            }
            set
            {
                OnC__sysChangeTxBsnChanging(value);
                ReportPropertyChanging("C__sysChangeTxBsn");
                _C__sysChangeTxBsn = StructuralObject.SetValidValue(value, "C__sysChangeTxBsn");
                ReportPropertyChanged("C__sysChangeTxBsn");
                OnC__sysChangeTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysChangeTxBsn;
        partial void OnC__sysChangeTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysChangeTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> C__sysInsertTxBsn
        {
            get
            {
                return _C__sysInsertTxBsn;
            }
            set
            {
                OnC__sysInsertTxBsnChanging(value);
                ReportPropertyChanging("C__sysInsertTxBsn");
                _C__sysInsertTxBsn = StructuralObject.SetValidValue(value, "C__sysInsertTxBsn");
                ReportPropertyChanged("C__sysInsertTxBsn");
                OnC__sysInsertTxBsnChanged();
            }
        }
        private Nullable<global::System.Int64> _C__sysInsertTxBsn;
        partial void OnC__sysInsertTxBsnChanging(Nullable<global::System.Int64> value);
        partial void OnC__sysInsertTxBsnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C__sysTrackingContext
        {
            get
            {
                return _C__sysTrackingContext;
            }
            set
            {
                OnC__sysTrackingContextChanging(value);
                ReportPropertyChanging("C__sysTrackingContext");
                _C__sysTrackingContext = StructuralObject.SetValidValue(value, "C__sysTrackingContext");
                ReportPropertyChanged("C__sysTrackingContext");
                OnC__sysTrackingContextChanged();
            }
        }
        private Nullable<global::System.Guid> _C__sysTrackingContext;
        partial void OnC__sysTrackingContextChanging(Nullable<global::System.Guid> value);
        partial void OnC__sysTrackingContextChanged();

        #endregion

    }

    #endregion

}
